// MFCMessage.cpp : Defines the entry point for the application.
//

#include "stdafx.h"
class CMyFrameWnd:public CFrameWnd{
private: 
		 static const AFX_MSGMAP_ENTRY _messageEntries[]; 
		 //
protected: 
		   static AFX_DATA const AFX_MSGMAP messageMap; 
	virtual const AFX_MSGMAP* GetMessageMap() const; 

public:
	LRESULT OnCreate(WPARAM wParam,LPARAM lParam);
};
LRESULT CMyFrameWnd::OnCreate(WPARAM wParam,LPARAM lParam){
	AfxMessageBox("CMyframeWnd::OnCreate");
	return 0;
}
class CMyWinApp:public CWinApp{
public:
	virtual BOOL InitInstance();
};
 
	const AFX_MSGMAP* CMyFrameWnd::GetMessageMap() const 
		{ 
			return &CMyFrameWnd::messageMap; 
		} 
	AFX_COMDAT AFX_DATADEF const AFX_MSGMAP CMyFrameWnd::messageMap = 
		{ 
			&CFrameWnd::messageMap, &CMyFrameWnd::_messageEntries[0] 
		}; 
	AFX_COMDAT const AFX_MSGMAP_ENTRY CMyFrameWnd::_messageEntries[] = 
		{ 
			{ 
				WM_CREATE, 0, 0, 0, AfxSig_lwl, 
				(AFX_PMSG)(AFX_PMSGW)(LRESULT (AFX_MSG_CALL CWnd::*)\
				(WPARAM, LPARAM))&OnCreate
			 },

			{
				0, 0, 0, 0, AfxSig_end, (AFX_PMSG)0 
			} 
		}; 
CMyWinApp theApp;
BOOL CMyWinApp::InitInstance(){
	CMyFrameWnd *pFrame=new CMyFrameWnd();
	pFrame->Create(NULL,"MFCMsg");
	m_pMainWnd=pFrame;
	pFrame->ShowWindow(SW_SHOW);
	pFrame->UpdateWindow();
	return TRUE;
}


***********************************************************
struct AFX_MSGMAP_ENTRY{
	UINT nMessage;//消息ID
	UINT nCode;	//通知码
	UINT nID;	//命令ID/控件ID
	UINT nLastID;	//最后一个控件ID
	UINT nSig;	//消息处理函数的类型
	AFX_PMSG pfn;	//消息处理函数的地址(指针)
};
struct AFX_MSGMAP
{
	const AFX_MSGMAP* pBaseMap;

	const AFX_MSGMAP_ENTRY* lpEntries;
};
