组件
	COM  Compoment Object Model,封装了一组功能的二进制文件.可以为系统、项目。
	其他组件提供服务。存在形式可以使dll或者EXE。与dll相比，组件的封装性更好。
	动态库导入函数可见，而组件的封装却不可见。

	特点
	可以动态的加载和卸载。
	与具体的编程语言无关。符合windows组件标准即可。
	使用灵活、方便。

	程序的编写模式的演化
		面向过程的结构化编程	自顶向下	函数代码复用
		面向对象编程	自底向上	一个EXE	代码复用
		面向组件编程	以功能模块为中心	一个EXE+ 多个dll 二进制复用


	windows组件
		COM 微软提出的一种规范和标准，只适合windows平台。

	Linux组件
		
	接口
		c接口  一组函数的集合
		cpp接口  类的成员函数  共有的成员函数。
		COM接口  一组纯虚函数的集合  只描述功能 ，不提供具体实现。

		接口关键字
		<objbase.h>中定义interface
		//#define interface struct	windows中结构体实为类
		降低程序间的耦合性，服务模块的代码发生变化时，客户模块
		的代码不需要修改。

		dll接口
			dll接口实现

			创建简单的win32动态库工程
			添加头文件math.h,定义IMath接口
			添加实现类CIMath,CIMath1以及创建对象的GetMath函数。
			添加到处文件。导出GetMath函数

			dll接口使用
			
			创建win32控制台程序
			显示调用。
			LoadLibrary 加载dll
			GetProcAddress,获取导出函数的地址
			调用函数,创建对象,返回接口.
			调用Add/Sub完成相应的功能。
			
			释放
				不可再其他进程中释放该对象
				dll和EXE拥有自己的内存堆。不可再dll中
				new对象而在EXE中释放。
				增加一个引用计数,使用它来计算库的使用数量。
				当有用户使用时计数器+1,用户使用完毕后计数器-1,
				判断引用计数的值是否为0,看是否删除对象。
				操作引用计数的函数
				AddRef(),引用计数+1
				Release(),引用计数-1,,在使用接口函数前调用。
