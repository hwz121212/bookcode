<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0045)http://www-scf.usc.edu/~flv/ipbook/chap01.htm -->
<HTML><HEAD><TITLE>第1章 Windows位图和调色板</TITLE>
<META http-equiv=Content-Type content="text/html; charset=GB2312"><LINK 
href="./chap01.files/editdata.mso" rel=Edit-Time-Data>
<STYLE>.Normal {
	TEXT-JUSTIFY: inter-ideograph; FONT-SIZE: 10.5pt; TEXT-INDENT: 0pt; LINE-HEIGHT: normal; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify
}
.a {
	FONT-SIZE: 12pt; TEXT-INDENT: 0pt; LINE-HEIGHT: 20pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: center
}
</STYLE>

<META content="MSHTML 6.00.2800.1400" name=GENERATOR></HEAD>
<BODY class=Normal lang=ZH-CN vLink=purple link=blue bgColor=#ffffff>
<DIV style="LAYOUT-GRID:  15.6pt none">
<H1><A name=_Toc486331863></A><A name=_Toc486332863></A><A 
name=_Toc486338972></A><A name=_Toc454810837></A><A 
name=_Toc454856611><SPAN><SPAN>第<SPAN 
lang=EN-US>1</SPAN></SPAN></SPAN></A><SPAN><SPAN><SPAN 
style="FONT-FAMILY: 黑体">章</SPAN><SPAN lang=EN-US> 
Windows</SPAN></SPAN></SPAN><SPAN><SPAN><SPAN 
style="FONT-FAMILY: 黑体">位图和调色板</SPAN></SPAN></SPAN></H1>
<H2><SPAN lang=EN-US>1.1</SPAN> <SPAN lang=EN-US></SPAN><A 
name=_Toc486331864></A><A name=_Toc486332864></A><A name=_Toc486338973></A><A 
name=_Toc454810838></A><A 
name=_Toc454856612><SPAN><SPAN>位图和调色板的概念</SPAN></SPAN></A></H2>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">如今</SPAN><SPAN 
lang=EN-US>Windows(3.x</SPAN><SPAN style="FONT-FAMILY: 宋体">以及</SPAN><SPAN 
lang=EN-US>95</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>98</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>NT)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">系列已经成为绝大多数用户使用的操作系统，它比</SPAN><SPAN 
lang=EN-US>DOS</SPAN><SPAN 
style="FONT-FAMILY: 宋体">成功的一个重要因素是它可视化的漂亮界面。那么</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">是如何显示图象的呢？这就要谈到位图</SPAN><SPAN 
lang=EN-US>(bitmap)</SPAN><SPAN style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">我们知道，普通的显示器屏幕是由许许多多点构成的，我们称之为象素。显示时采用扫描的方法：电子枪每次从左到右扫描一行，为每个象素着色，然后从上到下这样扫描若干行，就扫过了一屏。为了防止闪烁，每秒要重复上述过程几十次。例如我们常说的屏幕分辨率为</SPAN><SPAN 
lang=EN-US>640×480</SPAN><SPAN style="FONT-FAMILY: 宋体">，刷新频率为</SPAN><SPAN 
lang=EN-US>70Hz</SPAN><SPAN style="FONT-FAMILY: 宋体">，意思是说每行要扫描</SPAN><SPAN 
lang=EN-US>640</SPAN><SPAN style="FONT-FAMILY: 宋体">个象素，一共有</SPAN><SPAN 
lang=EN-US>480</SPAN><SPAN style="FONT-FAMILY: 宋体">行，每秒重复扫描屏幕</SPAN><SPAN 
lang=EN-US>70</SPAN><SPAN style="FONT-FAMILY: 宋体">次。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">我们称这种显示器为位映象设备。所谓位映象，就是指一个二维的象素矩阵，而位图就是采用位映象方法显示和存储的图象。举个例子，图</SPAN><SPAN 
lang=EN-US>1.1</SPAN><SPAN style="FONT-FAMILY: 宋体">是一幅普通的黑白位图，图</SPAN><SPAN 
lang=EN-US>1.2</SPAN><SPAN 
style="FONT-FAMILY: 宋体">是被放大后的图，图中每个方格代表了一个象素。我们可以看到：整个骷髅就是由这样一些黑点和白点组成的。</SPAN></P>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=Normal vAlign=bottom width=276>
      <P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US><IMG height=48 
      src="第1章 Windows位图和调色板.files/image001.gif" width=48 
      v:shapes="_x0000_i1026"> </SPAN></P>
      <P class=a style="LINE-HEIGHT: 18pt"><B><SPAN 
      style="FONT-FAMILY: 宋体">图</SPAN>1.1&nbsp;&nbsp;&nbsp; </B><B><SPAN 
      style="FONT-FAMILY: 宋体">骷髅</SPAN></B></P></TD>
    <TD class=Normal vAlign=bottom width=276>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><B><SPAN 
      lang=EN-US><IMG height=177 src="第1章 Windows位图和调色板.files/image003.jpg" 
      width=157 v:shapes="_x0000_i1025"> </SPAN></B></P>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><B><SPAN 
      style="FONT-FAMILY: 宋体">图</SPAN>1.2&nbsp;&nbsp;&nbsp;&nbsp; </B><B><SPAN 
      style="FONT-FAMILY: 宋体">放大后的骷髅位图</SPAN></B></P></TD></TR></TBODY></TABLE>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">那么，彩色图是怎么回事呢？</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">我们先来说说三元色</SPAN><SPAN 
lang=EN-US>RGB</SPAN><SPAN style="FONT-FAMILY: 宋体">概念。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">我们知道，自然界中的所有颜色都可以由红、绿、蓝</SPAN><SPAN 
lang=EN-US>(R</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>B)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">组合而成。有的颜色含有红色成分多一些，如深红；有的含有红色成分少一些，如浅红。针对含有红色成分的多少，可以分成</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">到</SPAN><SPAN 
lang=EN-US>255</SPAN><SPAN style="FONT-FAMILY: 宋体">共</SPAN><SPAN 
lang=EN-US>256</SPAN><SPAN style="FONT-FAMILY: 宋体">个等级，</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">级表示不含红色成分；</SPAN><SPAN 
lang=EN-US>255</SPAN><SPAN style="FONT-FAMILY: 宋体">级表示含有</SPAN><SPAN 
lang=EN-US>100%</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的红色成分。同样，绿色和蓝色也被分成</SPAN><SPAN 
lang=EN-US>256</SPAN><SPAN style="FONT-FAMILY: 宋体">级。这种分级概念称为量化。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">这样，根据红、绿、蓝各种不同的组合我们就能表示出</SPAN><SPAN 
lang=EN-US>256×256×256</SPAN><SPAN style="FONT-FAMILY: 宋体">，约</SPAN><SPAN 
lang=EN-US>1600</SPAN><SPAN 
style="FONT-FAMILY: 宋体">万种颜色。这么多颜色对于我们人眼来说已经足够丰富了。</SPAN></P>
<P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><B><SPAN 
style="FONT-FAMILY: 宋体">表</SPAN>1.1&nbsp;&nbsp;&nbsp;&nbsp; </B><B><SPAN 
style="FONT-FAMILY: 宋体">常见颜色的</SPAN><SPAN lang=EN-US>RGB</SPAN></B><B><SPAN 
style="FONT-FAMILY: 宋体">组合值</SPAN><SPAN lang=EN-US></SPAN></B></P>
<DIV align=center>
<TABLE cellSpacing=0 cellPadding=0 width="75%" border=1>
  <TBODY>
  <TR>
    <TD class=Normal width="25%">
      <P class=a style="LINE-HEIGHT: 18pt"><SPAN 
      style="FONT-FAMILY: 宋体">颜色</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>R</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>G</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>B</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">红</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">蓝</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">绿</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">黄</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">紫</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">青</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">白</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>255</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">黑</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>0</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">灰</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>128</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>128</SPAN></P></TD>
    <TD class=Normal width="25%">
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      lang=EN-US>128</SPAN></P></TD></TR></TBODY></TABLE></DIV>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">你大概已经明白了，当一幅图中每个象素赋予不同的</SPAN><SPAN 
lang=EN-US>RGB</SPAN><SPAN 
style="FONT-FAMILY: 宋体">值时，能呈现出五彩缤纷的颜色了，这样就形成了彩色图。的确是这样的，但实际上的做法还有些差别。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">让我们来看看下面的例子。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">有一个长宽各为</SPAN><SPAN 
lang=EN-US>200</SPAN><SPAN style="FONT-FAMILY: 宋体">个象素，颜色数为</SPAN><SPAN 
lang=EN-US>16</SPAN><SPAN style="FONT-FAMILY: 宋体">色的彩色图，每一个象素都用</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN style="FONT-FAMILY: 宋体">三个分量表示。因为每个分量有</SPAN><SPAN 
lang=EN-US>256</SPAN><SPAN style="FONT-FAMILY: 宋体">个级别，要用</SPAN><SPAN 
lang=EN-US>8</SPAN><SPAN style="FONT-FAMILY: 宋体">位</SPAN><SPAN 
lang=EN-US>(bit)</SPAN><SPAN style="FONT-FAMILY: 宋体">，即一个字节</SPAN><SPAN 
lang=EN-US>(byte)</SPAN><SPAN style="FONT-FAMILY: 宋体">来表示，所以每个象素需要用</SPAN><SPAN 
lang=EN-US>3</SPAN><SPAN style="FONT-FAMILY: 宋体">个字节。整个图象要用</SPAN><SPAN 
lang=EN-US>200×200×3</SPAN><SPAN style="FONT-FAMILY: 宋体">，约</SPAN><SPAN 
lang=EN-US>120k</SPAN><SPAN 
style="FONT-FAMILY: 宋体">字节，可不是一个小数目呀！如果我们用下面的方法，就能省的多。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">因为是一个</SPAN><SPAN 
lang=EN-US>16</SPAN><SPAN style="FONT-FAMILY: 宋体">色图，也就是说这幅图中最多只有</SPAN><SPAN 
lang=EN-US>16</SPAN><SPAN 
style="FONT-FAMILY: 宋体">种颜色，我们可以用一个表：表中的每一行记录一种颜色的</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN 
style="FONT-FAMILY: 宋体">值。这样当我们表示一个象素的颜色时，只需要指出该颜色是在第几行，即该颜色在表中的索引值。举个例子，如果表的第</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">行为</SPAN><SPAN 
lang=EN-US>255</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>0(</SPAN><SPAN style="FONT-FAMILY: 宋体">红色</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">，那么当某个象素为红色时，只需要标明</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">即可。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">让我们再来计算一下：</SPAN><SPAN lang=EN-US>16</SPAN><SPAN 
style="FONT-FAMILY: 宋体">种状态可以用</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位</SPAN><SPAN lang=EN-US>(bit)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">表示，所以一个象素要用半个字节。整个图象要用</SPAN><SPAN 
lang=EN-US>200×200×0.5</SPAN><SPAN style="FONT-FAMILY: 宋体">，约</SPAN><SPAN 
lang=EN-US>20k</SPAN><SPAN style="FONT-FAMILY: 宋体">字节，再加上表占用的字节为</SPAN><SPAN 
lang=EN-US>3×16=48</SPAN><SPAN style="FONT-FAMILY: 宋体">字节</SPAN><SPAN 
lang=EN-US>.</SPAN><SPAN style="FONT-FAMILY: 宋体">整个占用的字节数约为前面的</SPAN><SPAN 
lang=EN-US>1/6</SPAN><SPAN style="FONT-FAMILY: 宋体">，省很多吧？</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">这张</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN style="FONT-FAMILY: 宋体">的表，就是我们常说的调色板</SPAN><SPAN 
lang=EN-US>(Palette)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，另一种叫法是颜色查找表</SPAN><SPAN lang=EN-US>LUT(Look Up 
Table)</SPAN><SPAN style="FONT-FAMILY: 宋体">，似乎更确切一些。</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位图中便用到了调色板技术。其实不光是</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN style="FONT-FAMILY: 宋体">位图，许多图象文件格式如</SPAN><SPAN 
lang=EN-US>pcx</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>tif</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>gif</SPAN><SPAN 
style="FONT-FAMILY: 宋体">等都用到了。所以很好地掌握调色板的概念是十分有用的。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">有一种图，它的颜色数高达</SPAN><SPAN 
lang=EN-US>256×256×256</SPAN><SPAN 
style="FONT-FAMILY: 宋体">种，也就是说包含我们上述提到的</SPAN><SPAN lang=EN-US>R</SPAN><SPAN 
style="FONT-FAMILY: 宋体">、</SPAN><SPAN lang=EN-US>G</SPAN><SPAN 
style="FONT-FAMILY: 宋体">、</SPAN><SPAN lang=EN-US>B</SPAN><SPAN 
style="FONT-FAMILY: 宋体">颜色表示方法中所有的颜色，这种图叫做真彩色图</SPAN><SPAN lang=EN-US>(true 
color)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">。真彩色图并不是说一幅图包含了所有的颜色，而是说它具有显示所有颜色的能力，即最多可以包含所有的颜色。表示真彩色图时，每个象素直接用</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN 
style="FONT-FAMILY: 宋体">三个分量字节表示，而不采用调色板技术。原因很明显：如果用调色板，表示一个象素也要用</SPAN><SPAN 
lang=EN-US>24</SPAN><SPAN style="FONT-FAMILY: 宋体">位，这是因为每种颜色的索引要用</SPAN><SPAN 
lang=EN-US>24</SPAN><SPAN style="FONT-FAMILY: 宋体">位</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">因为总共有</SPAN><SPAN 
lang=EN-US>2<SUP>24</SUP></SPAN><SPAN 
style="FONT-FAMILY: 宋体">种颜色，即调色板有</SPAN><SPAN 
lang=EN-US>2<SUP>24</SUP></SPAN><SPAN style="FONT-FAMILY: 宋体">行</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">，和直接用</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN 
style="FONT-FAMILY: 宋体">三个分量表示用的字节数一样，不但没有任何便宜，还要加上一个</SPAN><SPAN 
lang=EN-US>256×256×256×3</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个字节的大调色板。所以真彩色图直接用</SPAN><SPAN lang=EN-US>R</SPAN><SPAN 
style="FONT-FAMILY: 宋体">、</SPAN><SPAN lang=EN-US>G</SPAN><SPAN 
style="FONT-FAMILY: 宋体">、</SPAN><SPAN lang=EN-US>B</SPAN><SPAN 
style="FONT-FAMILY: 宋体">三个分量表示，它又叫做</SPAN><SPAN lang=EN-US>24</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位色图。</SPAN></P>
<H2><A name=_Toc486331865></A><A name=_Toc486332865><SPAN lang=EN-US>1.2</SPAN> 
<SPAN lang=EN-US></SPAN></A><A name=_Toc486338974></A><A 
name=_Toc454810839></A><A 
name=_Toc454856613><SPAN><SPAN>bmp</SPAN></SPAN></A><SPAN><SPAN><SPAN 
style="FONT-FAMILY: 黑体">文件格式</SPAN></SPAN></SPAN></H2>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">介绍完位图和调色板的概念，下面就让我们来看一看</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN style="FONT-FAMILY: 宋体">的位图文件</SPAN><SPAN 
lang=EN-US>(.bmp</SPAN><SPAN style="FONT-FAMILY: 宋体">文件</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">的格式是什么样子的。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件大体上分成四个部分，如图</SPAN><SPAN lang=EN-US>1.3</SPAN><SPAN 
style="FONT-FAMILY: 宋体">所示。</SPAN></P>
<DIV align=center>
<TABLE cellSpacing=0 cellPadding=0 width="80%" border=1>
  <TBODY>
  <TR>
    <TD class=Normal vAlign=top width=455>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">位图文件头</SPAN><SPAN 
      lang=EN-US>BITMAPFILEHEADER</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal vAlign=top width=455>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">位图信息头</SPAN><SPAN 
      lang=EN-US>BITMAPINFOHEADER</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal vAlign=top width=455>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">调色板</SPAN><SPAN 
lang=EN-US>Palette</SPAN></P></TD></TR>
  <TR>
    <TD class=Normal vAlign=top width=455>
      <P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><SPAN 
      style="FONT-FAMILY: 宋体">实际的位图数据</SPAN><SPAN 
    lang=EN-US>ImageDate</SPAN></P></TD></TR></TBODY></TABLE></DIV>
<P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><B><SPAN 
style="FONT-FAMILY: 宋体">图</SPAN>1.3&nbsp;&nbsp;&nbsp;&nbsp; Windows</B><B><SPAN 
style="FONT-FAMILY: 宋体">位图文件结构示意图</SPAN><SPAN lang=EN-US></SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">第一部分为位图文件头</SPAN><B><SPAN 
lang=EN-US>BITMAPFILEHEADER</SPAN></B><SPAN 
style="FONT-FAMILY: 宋体">，是一个结构，其定义如下：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>typedef struct tagBITMAPFILEHEADER 
{</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">WORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
bfType; </P>
<P style="LINE-HEIGHT: 18pt">DWORD bfSize; </P>
<P 
style="LINE-HEIGHT: 18pt">WORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
bfReserved1; </P>
<P 
style="LINE-HEIGHT: 18pt">WORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
bfReserved2; </P>
<P style="LINE-HEIGHT: 18pt">DWORD bfOffBits; </P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>} BITMAPFILEHEADER; </SPAN><SPAN 
lang=EN-US style="FONT-SIZE: 9pt"></SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">这个结构的长度是固定的，为</SPAN><SPAN lang=EN-US>14</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个字节</SPAN><SPAN lang=EN-US>(WORD</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为无符号</SPAN><SPAN lang=EN-US>16</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位整数，</SPAN><SPAN lang=EN-US>DWORD</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为无符号</SPAN><SPAN lang=EN-US>32</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位整数</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，各个域的说明如下：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>bfType</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定文件类型，必须是</SPAN><SPAN lang=EN-US>0x424D</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，即字符串“</SPAN><SPAN lang=EN-US>BM</SPAN><SPAN 
style="FONT-FAMILY: 宋体">”，也就是说所有</SPAN><SPAN lang=EN-US>.bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件的头两个字节都是“</SPAN><SPAN lang=EN-US>BM</SPAN><SPAN 
style="FONT-FAMILY: 宋体">”。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>bfSize</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定文件大小，包括这</SPAN><SPAN lang=EN-US>14</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个字节。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>bfReserved1</SPAN></B><B><SPAN 
style="FONT-FAMILY: 宋体">，</SPAN>bfReserved2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">为保留字，不用考虑</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>bfOffBits</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">为从文件头到实际的位图数据的偏移字节数，即图</SPAN><SPAN 
lang=EN-US>1.3</SPAN><SPAN style="FONT-FAMILY: 宋体">中前三个部分的长度之和。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">第二部分为位图信息头</SPAN><B><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN></B><SPAN 
style="FONT-FAMILY: 宋体">，也是一个结构，其定义如下：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>typedef struct 
tagBITMAPINFOHEADER{</SPAN></P>
<P style="LINE-HEIGHT: 18pt">DWORD&nbsp; biSize; </P>
<P 
style="LINE-HEIGHT: 18pt">LONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biWidth; </P>
<P 
style="LINE-HEIGHT: 18pt">LONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biHeight; </P>
<P 
style="LINE-HEIGHT: 18pt">WORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biPlanes; </P>
<P 
style="LINE-HEIGHT: 18pt">WORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biBitCount </P>
<P style="LINE-HEIGHT: 18pt">DWORD&nbsp; biCompression; </P>
<P style="LINE-HEIGHT: 18pt">DWORD&nbsp; biSizeImage; </P>
<P 
style="LINE-HEIGHT: 18pt">LONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biXPelsPerMeter; </P>
<P 
style="LINE-HEIGHT: 18pt">LONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
biYPelsPerMeter; </P>
<P style="LINE-HEIGHT: 18pt">DWORD&nbsp; biClrUsed; </P>
<P style="LINE-HEIGHT: 18pt">DWORD&nbsp; biClrImportant; </P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>} BITMAPINFOHEADER; </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">这个结构的长度是固定的，为</SPAN><SPAN lang=EN-US>40</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个字节</SPAN><SPAN lang=EN-US>(LONG</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为</SPAN><SPAN lang=EN-US>32</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位整数</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，各个域的说明如下：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biSize</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定这个结构的长度，为</SPAN><SPAN lang=EN-US>40</SPAN><SPAN 
style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biWidth</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定图象的宽度，单位是象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biHeight</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定图象的高度，单位是象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biPlanes</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">必须是</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN style="FONT-FAMILY: 宋体">，不用考虑。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biBitCount </SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定表示颜色时要用到的位数，常用的值为</SPAN><SPAN 
lang=EN-US>1(</SPAN><SPAN style="FONT-FAMILY: 宋体">黑白二色图</SPAN><SPAN 
lang=EN-US>), 4(16</SPAN><SPAN style="FONT-FAMILY: 宋体">色图</SPAN><SPAN 
lang=EN-US>), 8(256</SPAN><SPAN style="FONT-FAMILY: 宋体">色</SPAN><SPAN 
lang=EN-US>), 24(</SPAN><SPAN style="FONT-FAMILY: 宋体">真彩色图</SPAN><SPAN 
lang=EN-US>)(</SPAN><SPAN style="FONT-FAMILY: 宋体">新的</SPAN><SPAN 
lang=EN-US>.bmp</SPAN><SPAN style="FONT-FAMILY: 宋体">格式支持</SPAN><SPAN 
lang=EN-US>32</SPAN><SPAN style="FONT-FAMILY: 宋体">位色，这里就不做讨论了</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biCompression</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定位图是否压缩，有效的值为</SPAN><SPAN lang=EN-US>BI_RGB</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，</SPAN><SPAN lang=EN-US>BI_RLE8</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，</SPAN><SPAN lang=EN-US>BI_RLE4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，</SPAN><SPAN lang=EN-US>BI_BITFIELDS(</SPAN><SPAN 
style="FONT-FAMILY: 宋体">都是一些</SPAN><SPAN lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">定义好的常量</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">。要说明的是，</SPAN><SPAN lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位图可以采用</SPAN><SPAN lang=EN-US>RLE4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，和</SPAN><SPAN lang=EN-US>RLE8</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的压缩格式，但用的不多。我们今后所讨论的只有第一种不压缩的情况，即</SPAN><SPAN 
lang=EN-US>biCompression</SPAN><SPAN style="FONT-FAMILY: 宋体">为</SPAN><SPAN 
lang=EN-US>BI_RGB</SPAN><SPAN style="FONT-FAMILY: 宋体">的情况。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biSizeImage</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定实际的位图数据占用的字节数，其实也可以从以下的公式中计算出来：</SPAN></P>
<P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>biSizeImage=biWidth’ × 
biHeight</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">要注意的是：上述公式中的</SPAN><SPAN lang=EN-US>biWidth’</SPAN><SPAN 
style="FONT-FAMILY: 宋体">必须是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数</SPAN><SPAN lang=EN-US>(</SPAN><SPAN 
style="FONT-FAMILY: 宋体">所以不是</SPAN><SPAN lang=EN-US>biWidth</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，而是</SPAN><SPAN lang=EN-US>biWidth’</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，表示大于或等于</SPAN><SPAN lang=EN-US>biWidth</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的，最接近</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数。举个例子，如果</SPAN><SPAN 
lang=EN-US>biWidth=240</SPAN><SPAN style="FONT-FAMILY: 宋体">，则</SPAN><SPAN 
lang=EN-US>biWidth’=240</SPAN><SPAN style="FONT-FAMILY: 宋体">；如果</SPAN><SPAN 
lang=EN-US>biWidth=241</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>biWidth’=244)</SPAN><SPAN style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">如果</SPAN><SPAN 
lang=EN-US>biCompression</SPAN><SPAN style="FONT-FAMILY: 宋体">为</SPAN><SPAN 
lang=EN-US>BI_RGB</SPAN><SPAN style="FONT-FAMILY: 宋体">，则该项可能为零</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biXPelsPerMeter</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定目标设备的水平分辨率，单位是每米的象素个数，关于分辨率的概念，我们将在第</SPAN><SPAN 
lang=EN-US>4</SPAN><SPAN style="FONT-FAMILY: 宋体">章详细介绍。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biYPelsPerMeter</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定目标设备的垂直分辨率，单位同上。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biClrUsed</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定本图象实际用到的颜色数，如果该值为零，则用到的颜色数为</SPAN><SPAN 
lang=EN-US>2<SUP>biBitCount</SUP></SPAN><SPAN 
style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><B><SPAN lang=EN-US>biClrImportant</SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">指定本图象中重要的颜色数，如果该值为零，则认为所有的颜色都是重要的。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">第三部分为调色板</SPAN><B><SPAN 
lang=EN-US>Palette</SPAN></B><SPAN 
style="FONT-FAMILY: 宋体">，当然，这里是对那些需要调色板的位图文件而言的。有些位图，如真彩色图，前面已经讲过，是不需要调色板的，</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">后直接是位图数据。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">调色板实际上是一个数组，共有</SPAN><SPAN 
lang=EN-US>biClrUsed</SPAN><SPAN style="FONT-FAMILY: 宋体">个元素</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">如果该值为零，则有</SPAN><SPAN 
lang=EN-US>2<SUP>biBitCount</SUP></SPAN><SPAN 
style="FONT-FAMILY: 宋体">个元素</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">。数组中每个元素的类型是一个</SPAN><SPAN 
lang=EN-US>RGBQUAD</SPAN><SPAN style="FONT-FAMILY: 宋体">结构，占</SPAN><SPAN 
lang=EN-US>4</SPAN><SPAN style="FONT-FAMILY: 宋体">个字节，其定义如下：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>typedef struct tagRGBQUAD { 
</SPAN></P>
<P style="LINE-HEIGHT: 18pt">BYTE&nbsp;&nbsp;&nbsp; rgbBlue; //<SPAN 
style="FONT-FAMILY: 宋体">该颜色的蓝色分量</SPAN></P>
<P style="LINE-HEIGHT: 18pt">BYTE&nbsp;&nbsp;&nbsp; rgbGreen; //<SPAN 
style="FONT-FAMILY: 宋体">该颜色的绿色分量</SPAN></P>
<P style="LINE-HEIGHT: 18pt">BYTE&nbsp;&nbsp;&nbsp; rgbRed; //<SPAN 
style="FONT-FAMILY: 宋体">该颜色的红色分量</SPAN></P>
<P style="LINE-HEIGHT: 18pt">BYTE&nbsp;&nbsp;&nbsp; rgbReserved; //<SPAN 
style="FONT-FAMILY: 宋体">保留值</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>} RGBQUAD; </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">第四部分就是实际的图象数据了。对于用到调色板的位图，图象数据就是该象素颜在调色板中的索引值。对于真彩色图，图象数据就是实际的</SPAN><SPAN 
lang=EN-US>R</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>G</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>B</SPAN><SPAN style="FONT-FAMILY: 宋体">值。下面针对</SPAN><SPAN 
lang=EN-US>2</SPAN><SPAN style="FONT-FAMILY: 宋体">色、</SPAN><SPAN 
lang=EN-US>16</SPAN><SPAN style="FONT-FAMILY: 宋体">色、</SPAN><SPAN 
lang=EN-US>256</SPAN><SPAN style="FONT-FAMILY: 宋体">色位图和真彩色位图分别介绍。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">对于</SPAN><SPAN 
lang=EN-US>2</SPAN><SPAN style="FONT-FAMILY: 宋体">色位图，用</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN style="FONT-FAMILY: 宋体">位就可以表示该象素的颜色</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">一般</SPAN><SPAN 
lang=EN-US>0</SPAN><SPAN style="FONT-FAMILY: 宋体">表示黑，</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN style="FONT-FAMILY: 宋体">表示白</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">，所以一个字节可以表示</SPAN><SPAN 
lang=EN-US>8</SPAN><SPAN style="FONT-FAMILY: 宋体">个象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">对于</SPAN><SPAN 
lang=EN-US>16</SPAN><SPAN style="FONT-FAMILY: 宋体">色位图，用</SPAN><SPAN 
lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位可以表示一个象素的颜色，所以一个字节可以表示</SPAN><SPAN 
lang=EN-US>2</SPAN><SPAN style="FONT-FAMILY: 宋体">个象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">对于</SPAN><SPAN 
lang=EN-US>256</SPAN><SPAN style="FONT-FAMILY: 宋体">色位图，一个字节刚好可以表示</SPAN><SPAN 
lang=EN-US>1</SPAN><SPAN style="FONT-FAMILY: 宋体">个象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">对于真彩色图，三个字节才能表示</SPAN><SPAN lang=EN-US>1</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个象素，哇，好费空间呀！没办法，谁叫你想让图的颜色显得更亮丽呢，有得必有失嘛。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">要注意两点：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体">每一行的字节数必须是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数，如果不是，则需要补齐。这在前面介绍</SPAN><SPAN 
lang=EN-US>biSizeImage</SPAN><SPAN style="FONT-FAMILY: 宋体">时已经提到了。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体">一般来说，</SPAN><SPAN lang=EN-US>.bMP</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件的数据从下到上，从左到右的。也就是说，从文件中最先读到的是图象最下面一行的左边第一个象素，然后是左边第二个象素</SPAN><SPAN 
lang=EN-US>……</SPAN><SPAN 
style="FONT-FAMILY: 宋体">接下来是倒数第二行左边第一个象素，左边第二个象素</SPAN><SPAN 
lang=EN-US>……</SPAN><SPAN style="FONT-FAMILY: 宋体">依次类推</SPAN> <SPAN 
style="FONT-FAMILY: 宋体">，最后得到的是最上面一行的最右一个象素。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">好了，终于介绍完</SPAN><SPAN 
lang=EN-US>bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件结构了，是不是觉得头有些大？别着急，对照着下面的程序，你就会很清楚了</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">我最爱看源程序了，呵呵</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">。</SPAN></P>
<H2><SPAN lang=EN-US>1.3</SPAN> <SPAN lang=EN-US></SPAN><A 
name=_Toc486331866></A><A name=_Toc486332866></A><A name=_Toc486338975></A><A 
name=_Toc454810840></A><A name=_Toc454856614><SPAN><SPAN>显示一个<SPAN 
lang=EN-US>bmp</SPAN></SPAN></SPAN></A><SPAN><SPAN><SPAN 
style="FONT-FAMILY: 黑体">文件的</SPAN><SPAN 
lang=EN-US>C</SPAN></SPAN></SPAN><SPAN><SPAN><SPAN 
style="FONT-FAMILY: 黑体">程序</SPAN></SPAN></SPAN></H2>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">下面的函数</SPAN><SPAN 
lang=EN-US>LoadBmpFile</SPAN><SPAN style="FONT-FAMILY: 宋体">，其功能是从一个</SPAN><SPAN 
lang=EN-US>.bmp</SPAN><SPAN style="FONT-FAMILY: 宋体">文件中读取数据</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">包括</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，调色板和实际图象数据</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，将其存储在一个全局内存句柄</SPAN><SPAN 
lang=EN-US>hImgData</SPAN><SPAN style="FONT-FAMILY: 宋体">中，这个</SPAN><SPAN 
lang=EN-US>hImgData</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将在以后的图象处理程序中用到。同时填写一个类型为</SPAN><SPAN 
lang=EN-US>HBITMAP</SPAN><SPAN style="FONT-FAMILY: 宋体">的全局变量</SPAN><SPAN 
lang=EN-US>hBitmap</SPAN><SPAN style="FONT-FAMILY: 宋体">和一个类型为</SPAN><SPAN 
lang=EN-US>HPALETTE</SPAN><SPAN style="FONT-FAMILY: 宋体">的全局变量</SPAN><SPAN 
lang=EN-US>hPalette</SPAN><SPAN style="FONT-FAMILY: 宋体">。这两个变量将在处理</SPAN><SPAN 
lang=EN-US>WM_PAINT</SPAN><SPAN 
style="FONT-FAMILY: 宋体">消息时用到，用来显示位图。该函数的两个参数分别是用来显示位图的窗口句柄，和</SPAN><SPAN 
lang=EN-US>.bmp</SPAN><SPAN style="FONT-FAMILY: 宋体">文件名</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">全路径</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">。当函数成功时，返回</SPAN><SPAN 
lang=EN-US>TRUE</SPAN><SPAN style="FONT-FAMILY: 宋体">，否则返回</SPAN><SPAN 
lang=EN-US>FALSE</SPAN><SPAN style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt">BITMAPFILEHEADER&nbsp; bf;</P>
<P style="LINE-HEIGHT: 18pt">BITMAPINFOHEADER bi;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>BOOL LoadBmpFile (HWND hWnd,char 
*BmpFileName)</SPAN></P>
<P style="LINE-HEIGHT: 18pt">{&nbsp;&nbsp; </P>
<P 
style="LINE-HEIGHT: 18pt">HFILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hf; //<SPAN 
style="FONT-FAMILY: 宋体">文件句柄</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指向</SPAN><SPAN lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">结构的指针</SPAN></P>
<P style="LINE-HEIGHT: 18pt">LPBITMAPINFOHEADER&nbsp;&nbsp;&nbsp; lpImgData; 
</P>
<P 
style="LINE-HEIGHT: 18pt">LOGPALETTE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *pPal; //<SPAN 
style="FONT-FAMILY: 宋体">指向逻辑调色板结构的指针</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">LPRGBQUAD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lpRGB; //<SPAN 
style="FONT-FAMILY: 宋体">指向</SPAN><SPAN lang=EN-US>RGBQUAD</SPAN><SPAN 
style="FONT-FAMILY: 宋体">结构的指针</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">HPALETTE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
hPrevPalette; //<SPAN style="FONT-FAMILY: 宋体">用来保存设备中原来的调色板</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">HDC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hDc; //<SPAN 
style="FONT-FAMILY: 宋体">设备句柄</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">HLOCAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hPal; //<SPAN 
style="FONT-FAMILY: 宋体">存储调色板的局部内存句柄</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LineBytes;&nbsp; //<SPAN 
style="FONT-FAMILY: 宋体">每一行的字节数</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ImgSize;&nbsp;&nbsp; //<SPAN 
style="FONT-FAMILY: 宋体">实际的图象数据占用的字节数</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">实际用到的颜色数</SPAN> <SPAN 
style="FONT-FAMILY: 宋体">，即调色板数组中的颜色个数</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt">DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NumColors; </P>
<P 
style="LINE-HEIGHT: 18pt">DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>if((hf=_lopen(BmpFileName,OF_READ))==HFILE_ERROR){</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>MessageBox(hWnd,"File c:\\test.bmp 
not found!","Error Message",</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>MB_OK|MB_ICONEXCLAMATION);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>return FALSE; //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">打开文件错误，返回</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将</SPAN><SPAN lang=EN-US>BITMAPFILEHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">结构从文件中读出，填写到</SPAN><SPAN lang=EN-US>bf</SPAN><SPAN 
style="FONT-FAMILY: 宋体">中</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>_lread(hf,(LPSTR)&amp;bf,sizeof(BITMAPFILEHEADER)); </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将</SPAN><SPAN lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">结构从文件中读出，填写到</SPAN><SPAN lang=EN-US>bi</SPAN><SPAN 
style="FONT-FAMILY: 宋体">中</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>_lread(hf,(LPSTR)&amp;bi,sizeof(BITMAPINFOHEADER));</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">我们定义了一个宏</SPAN> #define WIDTHBYTES(i)&nbsp;&nbsp;&nbsp; 
((i+31)/32*4)<SPAN style="FONT-FAMILY: 宋体">上面曾经</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">提到过，每一行的字节数必须是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数，只要调用</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>//WIDTHBYTES(bi.biWidth*bi.biBitCount)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">就能完成这一换算。举一个例</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">子，对于</SPAN><SPAN lang=EN-US>2</SPAN><SPAN 
style="FONT-FAMILY: 宋体">色图，如果图象宽是</SPAN><SPAN lang=EN-US>31</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，则每一行需要</SPAN><SPAN lang=EN-US>31</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位存储，合</SPAN><SPAN lang=EN-US>3</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">字节加</SPAN><SPAN lang=EN-US>7</SPAN><SPAN 
style="FONT-FAMILY: 宋体">位，因为字节数必须是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数，所以应该是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，而此时的</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>//biWidth=31,biBitCount=1,WIDTHBYTES(31*1)=4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，和我们设想的一样。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">再举一个</SPAN><SPAN lang=EN-US>256</SPAN><SPAN 
style="FONT-FAMILY: 宋体">色的例子，如果图象宽是</SPAN><SPAN lang=EN-US>31</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，则每一行需要</SPAN><SPAN lang=EN-US>31</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个字节存</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">储，因为字节数必须是</SPAN><SPAN lang=EN-US>4</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的整倍数，所以应该是</SPAN><SPAN lang=EN-US>32</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，而此时的</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>//biWidth=31,biBitCount=8,WIDTHBYTES(31*8)=32</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，我们设想的一样。你可</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">以多举几个例子来验证一下</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//LineBytes</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为每一行的字节数</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>LineBytes=(DWORD)WIDTHBYTES(bi.biWidth*bi.biBitCount);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//ImgSize</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为实际的图象数据占用的字节数</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>ImgSize=(DWORD)LineBytes*bi.biHeight;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//NumColors</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为实际用到的颜色数</SPAN> <SPAN 
style="FONT-FAMILY: 宋体">，即调色板数组中的颜色个数</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if(bi.biClrUsed!=0)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">如果</SPAN><SPAN lang=EN-US>bi.biClrUsed</SPAN><SPAN 
style="FONT-FAMILY: 宋体">不为零，即为实际用到的颜色数</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>NumColors=(DWORD)bi.biClrUsed; 
</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>else //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">否则，用到的颜色数为</SPAN><SPAN 
lang=EN-US>2<SUP>biBitCount</SUP></SPAN><SPAN 
style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>switch(bi.biBitCount){</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>case 1:</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>NumColors=2;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp; 
</SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>case 4:</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>NumColors=16;</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>case 8:</P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>NumColors=256;</P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>break;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>case 24:</P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>NumColors=0; //<SPAN style="FONT-FAMILY: 宋体">对于真彩色图，没用到调色板</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>break;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>default: //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">不处理其它的颜色数，认为出错。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>MessageBox(hWnd,"Invalid color 
numbers!","Error Message",</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>MB_OK|MB_ICONEXCLAMATION);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>_lclose(hf);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
return FALSE; //<SPAN style="FONT-FAMILY: 宋体">关闭文件，返回</SPAN><SPAN 
lang=EN-US>FALSE</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>if(bf.bfOffBits!=(DWORD)(NumColors*sizeof(RGBQUAD)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>sizeof(BITMAPFILEHEADER)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>sizeof(BITMAPINFOHEADER)))</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">计算出的偏移量与实际偏移量不符，一定是颜色数出错</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp; </SPAN>MessageBox(hWnd,"Invalid 
color numbers!","Error Message",</P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>MB_OK|MB_ICONEXCLAMATION);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>_lclose(hf);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>return FALSE; //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">关闭文件，返回</SPAN><SPAN lang=EN-US>FALSE</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>bf.bfSize=sizeof(BITMAPFILEHEADER)+sizeof(BITMAPINFOHEADER)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>NumColors*sizeof(RGBQUAD)+ImgSize;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">分配内存，大小为</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">结构长度加调色板</SPAN><SPAN lang=EN-US>+</SPAN><SPAN 
style="FONT-FAMILY: 宋体">实际位图</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>if((hImgData=GlobalAlloc(GHND,(DWORD)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>(sizeof(BITMAPINFOHEADER)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>NumColors*sizeof(RGBQUAD)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>ImgSize)))==NULL)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">分配内存错误</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>MessageBox(hWnd,"Error alloc 
memory!","ErrorMessage",MB_OK|</SPAN></P>
<P 
style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>MB_ICONEXCLAMATION);</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>_lclose(hf);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>return FALSE; //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">关闭文件，返回</SPAN><SPAN lang=EN-US>FALSE</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指针</SPAN><SPAN lang=EN-US>lpImgData</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指向该内存区</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>lpImgData=(LPBITMAPINFOHEADER)GlobalLock(hImgData); </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件指针重新定位到</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN style="FONT-FAMILY: 宋体">开始处</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>_llseek(hf,sizeof(BITMAPFILEHEADER),SEEK_SET);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将文件内容读入</SPAN><SPAN lang=EN-US>lpImgData</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>_hread(hf,(char 
*)lpImgData,(long)sizeof(BITMAPINFOHEADER)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>+(long)NumColors*sizeof(RGBQUAD)+ImgSize);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>_lclose(hf); //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">关闭文件</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if(NumColors!=0) 
//NumColors</SPAN><SPAN style="FONT-FAMILY: 宋体">不为零，说明用到了调色板</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">为逻辑调色板分配局部内存，大小为逻辑调色板结构长度加</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//NumColors</SPAN><SPAN 
style="FONT-FAMILY: 宋体">个</SPAN><SPAN lang=EN-US>PALETTENTRY</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>hPal=LocalAlloc(LHND,sizeof(LOGPALETTE)+</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>NumColors* 
sizeof(PALETTEENTRY));</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指针</SPAN><SPAN lang=EN-US>pPal</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指向该内存区</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>pPal =(LOGPALETTE 
*)LocalLock(hPal);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp; </SPAN>//<SPAN 
style="FONT-FAMILY: 宋体">填写逻辑调色板结构的头</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>pPal-&gt;palNumEntries = 
NumColors;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp; </SPAN>pPal-&gt;palVersion = 
0x300;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//lpRGB</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指向的是调色板开始的位置</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>lpRGB = 
(LPRGBQUAD)((LPSTR)lpImgData +</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>(DWORD)sizeof(BITMAPINFOHEADER));</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">填写每一项</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>for (i = 0; i &lt; NumColors; 
i++)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN>&nbsp;&nbsp; </SPAN>{</P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>pPal-&gt;palPalEntry[i].peRed=lpRGB-&gt;rgbRed;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>pPal-&gt;palPalEntry[i].peGreen=lpRGB-&gt;rgbGreen;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>pPal-&gt;palPalEntry[i].peBlue=lpRGB-&gt;rgbBlue;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>pPal-&gt;palPalEntry[i].peFlags=(BYTE)0;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>lpRGB++; //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">指针移到下一项</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">产生逻辑调色板，</SPAN><SPAN lang=EN-US>hPalette</SPAN><SPAN 
style="FONT-FAMILY: 宋体">是一个全局变量</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>hPalette=CreatePalette(pPal);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">释放局部内存</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>LocalUnlock(hPal);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>LocalFree(hPal);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">获得设备上下文句柄</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>hDc=GetDC(hWnd);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if(hPalette) //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">如果刚才产生了逻辑调色板</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将新的逻辑调色板选入</SPAN><SPAN lang=EN-US>DC</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，将旧的逻辑调色板句柄保存在</SPAN><SPAN 
lang=EN-US>//hPrevPalette</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>hPrevPalette=SelectPalette(hDc,hPalette,FALSE);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>RealizePalette(hDc);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">产生位图句柄</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>hBitmap=CreateDIBitmap(hDc,(LPBITMAPINFOHEADER)lpImgData, </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(LONG)CBM_INIT,</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>(LPSTR)lpImgData+sizeof(BITMAPINFOHEADER)+NumColors*sizeof(RGBQUAD),</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(LPBITMAPINFO)lpImgData, 
DIB_RGB_COLORS);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将原来的调色板</SPAN><SPAN lang=EN-US>(</SPAN><SPAN 
style="FONT-FAMILY: 宋体">如果有的话</SPAN><SPAN lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">选入设备上下文句柄</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if(hPalette &amp;&amp; 
hPrevPalette)</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>SelectPalette(hDc,hPrevPalette,FALSE);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>RealizePalette(hDc);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>ReleaseDC(hWnd,hDc); 
//</SPAN><SPAN style="FONT-FAMILY: 宋体">释放设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>GlobalUnlock(hImgData); 
//</SPAN><SPAN style="FONT-FAMILY: 宋体">解锁内存区</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>return TRUE; //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">成功返回</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN><SPAN lang=EN-US 
style="FONT-SIZE: 9pt"></SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">对上面的程序要说明两点：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(1)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体">对于需要调色板的图，要想正确地显示，必须根据</SPAN><SPAN 
lang=EN-US>bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件，产生逻辑调色板。产生的方法是：①为逻辑调色板指针分配内存，大小为逻辑调色板结构</SPAN><SPAN 
lang=EN-US>(LOGPALETTE)</SPAN><SPAN style="FONT-FAMILY: 宋体">长度加</SPAN><SPAN 
lang=EN-US>NumColors</SPAN><SPAN style="FONT-FAMILY: 宋体">个</SPAN><SPAN 
lang=EN-US>PALETTENTRY</SPAN><SPAN style="FONT-FAMILY: 宋体">大小</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">调色板的每一项都是一个</SPAN><SPAN 
lang=EN-US>PALETTEENTRY</SPAN><SPAN style="FONT-FAMILY: 宋体">结构</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">；②填写逻辑调色板结构的头</SPAN><SPAN 
lang=EN-US>pPal-&gt;palNumEntries = NumColors; pPal-&gt;palVersion = 
0x300</SPAN><SPAN style="FONT-FAMILY: 宋体">；③从文件中读取调色板的</SPAN><SPAN 
lang=EN-US>RGB</SPAN><SPAN 
style="FONT-FAMILY: 宋体">值，填写到每一项中；④产生逻辑调色板：</SPAN><SPAN 
lang=EN-US>hPalette=CreatePalette(pPal)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(2)<SPAN 
style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN 
style="FONT-FAMILY: 宋体">产生位图</SPAN><SPAN lang=EN-US>(BITMAP)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">句柄，该项工作由函数</SPAN><SPAN 
lang=EN-US>CreateDIBitmap</SPAN><SPAN style="FONT-FAMILY: 宋体">来完成。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>hBitmap=CreateDIBitmap(hDc,(LPBITMAPINFOHEADER)lpImgData, </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(LONG)CBM_INIT,</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>(LPSTR)lpImgData+sizeof(BITMAPINFOHEADER)+NumColors*sizeof(RGBQUAD),</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>(LPBITMAPINFO)lpImgData, 
DIB_RGB_COLORS);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>CreateDIBitmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的作用是产生一个和</SPAN><SPAN lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">设备无关的位图。该函数的第一项参数为设备上下文句柄。如果位图用到了调色板，要在调用</SPAN><SPAN 
lang=EN-US>CreateDIBitmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体">之前将逻辑调色板选入该设备上下文中，产生</SPAN><SPAN 
lang=EN-US>hBitmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体">后，再把原调色板选入该设备上下文中，并释放该上下文；第二项为指向</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的指针；第三项就用常量</SPAN><SPAN lang=EN-US>CBM_INI</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，不用考虑；第四项为指向调色板的指针；第五项为指向</SPAN><SPAN 
lang=EN-US>BITMAPINFO(</SPAN><SPAN style="FONT-FAMILY: 宋体">包括</SPAN><SPAN 
lang=EN-US>BITMAPINFOHEADER,</SPAN><SPAN style="FONT-FAMILY: 宋体">调色板</SPAN><SPAN 
lang=EN-US>,</SPAN><SPAN style="FONT-FAMILY: 宋体">及实际的图象数据</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">的指针；第六项就用常量</SPAN><SPAN 
lang=EN-US>DIB_RGB_COLORS</SPAN><SPAN style="FONT-FAMILY: 宋体">，不用考虑。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">上面提到了设备上下文，相信编过</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">程序的读者对它并不陌生，这里再简单介绍一下。</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">操作系统统一管理着诸如显示，打印等操作，将它们看作是一个个的设备，每一个设备都有一个复杂的数据结构来维护。所谓设备上下文就是指这个数据结构。然而，我们不能直接和这些设备上下文打交道，只能通过引用标识它的句柄</SPAN><SPAN 
lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: 宋体">实际上是一个整数</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">，让</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN style="FONT-FAMILY: 宋体">去做相应的处理。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">产生的逻辑调色板句柄</SPAN><SPAN lang=EN-US>hPalette</SPAN><SPAN 
style="FONT-FAMILY: 宋体">和位图句柄</SPAN><SPAN lang=EN-US>hBitmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体">要在处理</SPAN><SPAN lang=EN-US>WM_PAINT</SPAN><SPAN 
style="FONT-FAMILY: 宋体">消息时使用，这样才能在屏幕上显示出来，处理过程如下面的程序。</SPAN></P>
<P style="LINE-HEIGHT: 18pt">Static&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
HDC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
hDC,hMemDC;</P>
<P 
style="LINE-HEIGHT: 18pt">PAINTSTRUCT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
ps;</P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>case WM_PAINT:</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>hDC = BeginPaint(hwnd, &amp;ps); 
//</SPAN><SPAN style="FONT-FAMILY: 宋体">获得屏幕设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if (hBitmap) //hBitmap</SPAN><SPAN 
style="FONT-FAMILY: 宋体">一开始是</SPAN><SPAN lang=EN-US>NULL</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，当不为</SPAN><SPAN lang=EN-US>NULL</SPAN><SPAN 
style="FONT-FAMILY: 宋体">时表示有图</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>hMemDC = CreateCompatibleDC(hDC); 
//</SPAN><SPAN style="FONT-FAMILY: 宋体">建立一个内存设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>if (hPalette) //</SPAN><SPAN 
style="FONT-FAMILY: 宋体">有调色板</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>{</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将调色板选入屏幕设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>SelectPalette (hDC, hPalette, 
FALSE); </SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将调色板选入内存设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>SelectPalette (hMemDC, hpalette, 
FALSE);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>RealizePalette (hDC);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">将位图选入内存设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>SelectObject(hMemDC, 
hBitmap);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">显示位图</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>BitBlt(hDC, 0, 0, bi.biWidth, 
bi.biHeight, hMemDC, 0, 0, SRCCOPY);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">释放内存设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>DeleteDC(hMemDC);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>//</SPAN><SPAN 
style="FONT-FAMILY: 宋体">释放屏幕设备上下文</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>EndPaint(hwnd, 
&amp;ps);</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>break;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>}</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">在上面的程序中，我们调用</SPAN><SPAN 
lang=EN-US>CreateCompatibleDC</SPAN><SPAN 
style="FONT-FAMILY: 宋体">创建一个内存设备上下文。</SPAN><SPAN 
lang=EN-US>SelectObject</SPAN><SPAN 
style="FONT-FAMILY: 宋体">函数将与设备无关的位图选入内存设备上下文中。然后我们调用</SPAN><SPAN 
lang=EN-US>BitBlt</SPAN><SPAN 
style="FONT-FAMILY: 宋体">函数在内存设备上下文和屏幕设备上下文中进行位拷贝。由于所有操作都是在内存中进行，所以速度很快。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>BitBlt</SPAN><SPAN 
style="FONT-FAMILY: 宋体">函数的参数分别为：</SPAN><SPAN lang=EN-US>1.</SPAN><SPAN 
style="FONT-FAMILY: 宋体">目标设备上下文，在上面的程序里，为屏幕设备上下文，如果改成打印设备上下文，就不是显示位图，而是打印；</SPAN><SPAN 
lang=EN-US>2.</SPAN><SPAN style="FONT-FAMILY: 宋体">目标矩形左上角点</SPAN><SPAN 
lang=EN-US>x</SPAN><SPAN style="FONT-FAMILY: 宋体">坐标；</SPAN><SPAN lang=EN-US>3. 
</SPAN><SPAN style="FONT-FAMILY: 宋体">目标矩形左上角点</SPAN><SPAN 
lang=EN-US>y</SPAN><SPAN style="FONT-FAMILY: 宋体">坐标，在上面的程序中，</SPAN><SPAN 
lang=EN-US>2</SPAN><SPAN style="FONT-FAMILY: 宋体">和</SPAN><SPAN 
lang=EN-US>3</SPAN><SPAN style="FONT-FAMILY: 宋体">为</SPAN><SPAN 
lang=EN-US>(0</SPAN><SPAN style="FONT-FAMILY: 宋体">，</SPAN><SPAN 
lang=EN-US>0)</SPAN><SPAN style="FONT-FAMILY: 宋体">，表示显示在窗口的左上角；</SPAN><SPAN 
lang=EN-US>4.</SPAN><SPAN style="FONT-FAMILY: 宋体">目标矩形的宽度；</SPAN><SPAN 
lang=EN-US>5. </SPAN><SPAN style="FONT-FAMILY: 宋体">目标矩形的高度；</SPAN><SPAN 
lang=EN-US>6. </SPAN><SPAN 
style="FONT-FAMILY: 宋体">源设备上下文，在上面的程序里，为内存设备上下文；</SPAN><SPAN lang=EN-US>7. 
</SPAN><SPAN style="FONT-FAMILY: 宋体">源矩形左上角点</SPAN><SPAN 
lang=EN-US>x</SPAN><SPAN style="FONT-FAMILY: 宋体">坐标；</SPAN><SPAN lang=EN-US>8. 
</SPAN><SPAN style="FONT-FAMILY: 宋体">源矩形左上角点</SPAN><SPAN 
lang=EN-US>y</SPAN><SPAN style="FONT-FAMILY: 宋体">坐标；</SPAN><SPAN 
lang=EN-US>9.</SPAN><SPAN style="FONT-FAMILY: 宋体">操作方式，在这里为</SPAN><SPAN 
lang=EN-US>SRCCOPY</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，表示直接将源矩形拷贝到目标矩形。还可以是反色，擦除，做“与”运算等操作，具体细节见</SPAN><SPAN 
lang=EN-US>VC++</SPAN><SPAN style="FONT-FAMILY: 宋体">帮助。你可以试着改改第</SPAN><SPAN 
lang=EN-US>2</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>3</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>4</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>5</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>7</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>8</SPAN><SPAN style="FONT-FAMILY: 宋体">、</SPAN><SPAN 
lang=EN-US>9</SPAN><SPAN style="FONT-FAMILY: 宋体">项参数，就能体会到它们的含义了。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">哇，终于讲完了。是不是觉得有点枯燥？这一章是有点儿枯燥，特别是当你对</SPAN><SPAN 
lang=EN-US>Windows</SPAN><SPAN 
style="FONT-FAMILY: 宋体">的编程并不清楚时，就更觉得如此。不过，当一幅漂亮的</SPAN><SPAN 
lang=EN-US>bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">图显示在屏幕上时，你还是会兴奋地大叫“</SPAN><SPAN 
lang=EN-US>Yeah!</SPAN><SPAN style="FONT-FAMILY: 宋体">”，至少当年我是这样。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">在本书的附盘中包含所有的源程序，包括头文件和资源文件和例图。特别要注意的是，退出时，别忘了释放内存和资源，这是每个程序员应该养成的习惯。这些个程序并不是很完善，例如，如果一幅图很大，屏幕显示不下怎么办？你可以试着自己加上滚动条。另外，为了节省篇幅，</SPAN><SPAN 
lang=EN-US>.bmp</SPAN><SPAN style="FONT-FAMILY: 宋体">文件名被固定为</SPAN><SPAN 
lang=EN-US>c:\test.bmp</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，可以自己加入打开文件对话框，任意选择你要显示的文件。图</SPAN><SPAN 
lang=EN-US>1.4</SPAN><SPAN style="FONT-FAMILY: 宋体">为程序运行时的画面。</SPAN></P>
<P class=a style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US><IMG height=207 
src="第1章 Windows位图和调色板.files/image005.jpg" width=287 v:shapes="_x0000_i1027"> 
</SPAN></P>
<P style="LINE-HEIGHT: 18pt; TEXT-ALIGN: center" align=center><B><SPAN 
style="FONT-FAMILY: 宋体">图</SPAN>1.4&nbsp;&nbsp;&nbsp;&nbsp; </B><B><SPAN 
style="FONT-FAMILY: 宋体">运行时的画面</SPAN><SPAN lang=EN-US></SPAN></B></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">最后，再介绍一个命令行编译的窍门。为什么要用命令行编译呢？主要有两个好处：第一，不用进入</SPAN><SPAN 
lang=EN-US>IDE(</SPAN><SPAN style="FONT-FAMILY: 宋体">集成开发环境</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，节省了时间，而且编译速度也比较快；第二，对于简单的程序，不用生成项目文件</SPAN><SPAN 
lang=EN-US>.mdp</SPAN><SPAN style="FONT-FAMILY: 宋体">或</SPAN><SPAN 
lang=EN-US>.mak</SPAN><SPAN style="FONT-FAMILY: 宋体">，直接就能生成</SPAN><SPAN 
lang=EN-US>.exe</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件，这一点，在下面的例子中可以看到。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">在安装完</SPAN><SPAN 
lang=EN-US>Visual C++</SPAN><SPAN style="FONT-FAMILY: 宋体">时，在</SPAN><SPAN 
lang=EN-US>bin</SPAN><SPAN style="FONT-FAMILY: 宋体">目录下会产生一个</SPAN><SPAN 
lang=EN-US>VCVARS32.BAT</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件，它的作用是在命令行编译时设置正确的环境变量，如存放头文件的</SPAN><SPAN 
lang=EN-US>INCLUDE</SPAN><SPAN style="FONT-FAMILY: 宋体">目录，存放库文件的</SPAN><SPAN 
lang=EN-US>LIB</SPAN><SPAN 
style="FONT-FAMILY: 宋体">目录等。如果你没找到这个批处理文件，可以参考下面的例子，自己做一个批处理。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>@echo off</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set MSDevDir=d:\MSDEV</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set VcOsDir=WIN95</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set 
PATH="%MSDevDir%\BIN";"%MSDevDir%\BIN\%VcOsDir%";"%PATH%"</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set 
INCLUDE=%MSDevDir%\INCLUDE;%MSDevDir%\MFC\INCLUDE;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>%INCLUDE%</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set 
LIB=%MSDevDir%\LIB;%MSDevDir%\MFC\LIB;%LIB%</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN lang=EN-US>set VcOsDir=</SPAN><SPAN 
lang=EN-US style="FONT-SIZE: 9pt"></SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">只要把上面的“</SPAN><SPAN 
lang=EN-US>d:\MSDEV</SPAN><SPAN style="FONT-FAMILY: 宋体">”改成你自己的</SPAN><SPAN 
lang=EN-US>VC</SPAN><SPAN style="FONT-FAMILY: 宋体">目录就可以了。在</SPAN><SPAN 
lang=EN-US>DOS PROMPT</SPAN><SPAN 
style="FONT-FAMILY: 宋体">下执行该批处理文件，执行</SPAN><SPAN lang=EN-US>set</SPAN><SPAN 
style="FONT-FAMILY: 宋体">命令，你就能看到新设置的环境变量了。如下所示：</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>PATH=D:\MSDEV\BIN;D:\MSDEV\BIN\WIN95;C:\WIN95;C:\WIN95\COMMAND;C:\WIN95\SYSTEM;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>INCLUDE=d:\msdev\INCLUDE;d:\msdev\MFC\INCLUDE;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
lang=EN-US>LIB=d:\msdev\LIB;d:\msdev\MFC\LIB;</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">现在我们就可以进行命令行编译了。首先编译资源文件，输入</SPAN><SPAN lang=EN-US>rc 
bmp.rc</SPAN><SPAN style="FONT-FAMILY: 宋体">，将生成</SPAN><SPAN 
lang=EN-US>bmp.res</SPAN><SPAN style="FONT-FAMILY: 宋体">文件，接着输入</SPAN><SPAN 
lang=EN-US>cl bmp.c bmp.res user32.lib gdi32.lib</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，就生成</SPAN><SPAN lang=EN-US>bmp.exe </SPAN><SPAN 
style="FONT-FAMILY: 宋体">了。可以看到，我们并没有用到项目文件，所以，对于这种简单的程序来说，使用命令行编译还是非常方便的。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN 
style="FONT-FAMILY: 宋体">有时命令行编译会出现“</SPAN><SPAN lang=EN-US>Out of enviroment 
space</SPAN><SPAN style="FONT-FAMILY: 宋体">”的错误</SPAN><SPAN 
lang=EN-US>,</SPAN><SPAN style="FONT-FAMILY: 宋体">那是因为</SPAN><SPAN 
lang=EN-US>command.com</SPAN><SPAN 
style="FONT-FAMILY: 宋体">缺省的初始环境变量内存太小，首先执行</SPAN><SPAN lang=EN-US>command 
/e:2048 (</SPAN><SPAN style="FONT-FAMILY: 宋体">或更大</SPAN><SPAN 
lang=EN-US>)</SPAN><SPAN style="FONT-FAMILY: 宋体">命令即可解决改问题。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">使用</SPAN><SPAN 
lang=EN-US>ide</SPAN><SPAN style="FONT-FAMILY: 宋体">的方法是：</SPAN><SPAN 
lang=EN-US>new project</SPAN><SPAN style="FONT-FAMILY: 宋体">，类型是</SPAN><SPAN 
lang=EN-US>win32 application-&gt;empty project</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，然后把</SPAN><SPAN lang=EN-US>.h,.rc,.c</SPAN><SPAN 
style="FONT-FAMILY: 宋体">文件</SPAN><SPAN lang=EN-US>add to project</SPAN><SPAN 
style="FONT-FAMILY: 宋体">编译即可。</SPAN></P>
<P style="LINE-HEIGHT: 18pt"><SPAN style="FONT-FAMILY: 宋体">好了，运行</SPAN><SPAN 
lang=EN-US>bmp.exe</SPAN><SPAN 
style="FONT-FAMILY: 宋体">，欣赏一下你今天的劳动成果。</SPAN></P></DIV>
<DIV 
style="DISPLAY: block; FONT-SIZE: 10px; FONT-FAMILY: Verdana, Geneva, Arial">The 
University of Southern California does not screen or control the content on this 
website and thus does not guarantee the accuracy, integrity, or quality of such 
content. All content on this website is provided by and is the sole 
responsibility of the person from which such content originated, and such 
content does not necessarily reflect the opinions of the University 
administration or the Board of Trustees </DIV></BODY></HTML>
