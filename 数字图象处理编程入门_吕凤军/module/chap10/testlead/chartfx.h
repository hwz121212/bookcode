#if !defined(AFX_CHARTFX_H__BA0EE532_E514_11D1_A2B6_0000B4810C13__INCLUDED_)
#define AFX_CHARTFX_H__BA0EE532_E514_11D1_A2B6_0000B4810C13__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CChartfx wrapper class

class CChartfx : public CWnd
{
protected:
	DECLARE_DYNCREATE(CChartfx)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x8996b0a1, 0xd7be, 0x101b, { 0x86, 0x50, 0x0, 0xaa, 0x0, 0x3a, 0x55, 0x93 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetDesignDraw();
	void SetDesignDraw(short);
	short GetThisSerie();
	void SetThisSerie(short);
	short GetThisPoint();
	void SetThisPoint(short);
	BOOL GetAutoInvalidate();
	void SetAutoInvalidate(BOOL);
	long GetType();
	void SetType(long);
	long GetStyle();
	void SetStyle(long);
	short GetNSeries();
	void SetNSeries(short);
	short GetNValues();
	void SetNValues(short);
	unsigned long GetThisColor();
	void SetThisColor(unsigned long);
	unsigned long GetThisBkColor();
	void SetThisBkColor(unsigned long);
	short GetLeftGap();
	void SetLeftGap(short);
	short GetRightGap();
	void SetRightGap(short);
	short GetTopGap();
	void SetTopGap(short);
	short GetBottomGap();
	void SetBottomGap(short);
	short GetDecimals();
	void SetDecimals(short);
	short GetPointType();
	void SetPointType(short);
	short GetScheme();
	void SetScheme(short);
	short GetStacked();
	void SetStacked(short);
	short GetGrid();
	void SetGrid(short);
	short GetWallWidth();
	void SetWallWidth(short);
	short GetBarHorzGap();
	void SetBarHorzGap(short);
	BOOL GetView3D();
	void SetView3D(BOOL);
	long GetAngles3D();
	void SetAngles3D(long);
	short GetPixFactor();
	void SetPixFactor(short);
	short GetLineWidth();
	void SetLineWidth(short);
	short GetLineStyle();
	void SetLineStyle(short);
	unsigned long GetLineColor();
	void SetLineColor(unsigned long);
	unsigned long GetLineBkColor();
	void SetLineBkColor(unsigned long);
	short GetFixedWidth();
	void SetFixedWidth(short);
	short GetFixedStyle();
	void SetFixedStyle(short);
	unsigned long GetFixedColor();
	void SetFixedColor(unsigned long);
	unsigned long GetFixedBkColor();
	void SetFixedBkColor(unsigned long);
	short GetFixedGap();
	void SetFixedGap(short);
	unsigned long GetRGBBarHorz();
	void SetRGBBarHorz(unsigned long);
	unsigned long GetRGBBk();
	void SetRGBBk(unsigned long);
	unsigned long GetRGB2DBk();
	void SetRGB2DBk(unsigned long);
	unsigned long GetRGB3DBk();
	void SetRGB3DBk(unsigned long);
	BOOL GetShowStatus();
	void SetShowStatus(BOOL);
	CString GetHText();
	void SetHText(LPCTSTR);
	short GetChartStatus();
	void SetChartStatus(short);
	short GetEdit();
	void SetEdit(short);
	short GetChartType();
	void SetChartType(short);
	BOOL GetChart3D();
	void SetChart3D(BOOL);
	BOOL GetToolBar();
	void SetToolBar(BOOL);
	BOOL GetPaletteBar();
	void SetPaletteBar(BOOL);
	BOOL GetPatternBar();
	void SetPatternBar(BOOL);
	long GetCustTool();
	void SetCustTool(long);
	long GetReturnValue();
	void SetReturnValue(long);
	BOOL GetAutoIncrement();
	void SetAutoIncrement(BOOL);
	double GetThisValue();
	void SetThisValue(double);
	short GetVertGridGap();
	void SetVertGridGap(short);
	short GetXLegType();
	void SetXLegType(short);
	short GetConstType();
	void SetConstType(short);
	COleFont GetLeftFont();
	void SetLeftFont(LPDISPATCH);
	COleFont GetRightFont();
	void SetRightFont(LPDISPATCH);
	COleFont GetTopFont();
	void SetTopFont(LPDISPATCH);
	COleFont GetBottomFont();
	void SetBottomFont(LPDISPATCH);
	COleFont GetXLegFont();
	void SetXLegFont(LPDISPATCH);
	COleFont GetYLegFont();
	void SetYLegFont(LPDISPATCH);
	COleFont GetFixedFont();
	void SetFixedFont(LPDISPATCH);
	COleFont GetLegendFont();
	void SetLegendFont(LPDISPATCH);
	short GetLegendWidth();
	void SetLegendWidth(short);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	short GetBorderStyle();
	void SetBorderStyle(short);
	long GetHCtlWnd();
	void SetHCtlWnd(long);

// Operations
public:
	double GetValue(short index);
	void SetValue(short index, double newValue);
	double GetXValue(short index);
	void SetXValue(short index, double newValue);
	double GetIniValue(short index);
	void SetIniValue(short index, double newValue);
	double GetConst(short index);
	void SetConst(short index, double newValue);
	unsigned long GetColor(short index);
	void SetColor(short index, unsigned long newValue);
	unsigned long GetBkColor(short index);
	void SetBkColor(short index, unsigned long newValue);
	double GetAdm(short index);
	void SetAdm(short index, double newValue);
	short GetPattern(short index);
	void SetPattern(short index, short nNewValue);
	long GetFonts(short index);
	void SetFonts(short index, long nNewValue);
	CString GetTitle(short index);
	void SetTitle(short index, LPCTSTR lpszNewValue);
	CString GetLegend(short index);
	void SetLegend(short index, LPCTSTR lpszNewValue);
	CString GetSerLeg(short index);
	void SetSerLeg(short index, LPCTSTR lpszNewValue);
	CString GetKeyLeg(short index);
	void SetKeyLeg(short index, LPCTSTR lpszNewValue);
	CString GetFixLeg(short index);
	void SetFixLeg(short index, LPCTSTR lpszNewValue);
	CString GetYLeg(short index);
	void SetYLeg(short index, LPCTSTR lpszNewValue);
	CString GetKeySer(short index);
	void SetKeySer(short index, LPCTSTR lpszNewValue);
	CString GetStatusText(short index);
	void SetStatusText(short index, LPCTSTR lpszNewValue);
	unsigned long GetRGBFont(short index);
	void SetRGBFont(short index, unsigned long newValue);
	short GetHFont(short index);
	void SetHFont(short index, short nNewValue);
	short GetItemWidth(short index);
	void SetItemWidth(short index, short nNewValue);
	short GetItemStyle(short index);
	void SetItemStyle(short index, short nNewValue);
	unsigned long GetItemColor(short index);
	void SetItemColor(short index, unsigned long newValue);
	short GetDecimalsNum(short index);
	void SetDecimalsNum(short index, short nNewValue);
	long OpenDataEx(short nType, long n1, long n2);
	BOOL CloseData(short nType);
	long DblClk(short nType, long lExtra);
	long RigClk(short nType, long lExtra);
	long Status(short nItems, long lpStatus);
	long ShowDialog(short nDialog, long lExtra);
	long PrintIt();
	long Scroll(long wParam, long lParam);
	long SetStatusItem(short index, BOOL bText, short nID, BOOL bFrame, short nWidth, short nMin, short nDesp, long dwStyle);
	long Paint(long hDC, short nLeft, short nTop, short nRight, short nBottom, short wAction, long lps);
	long SetStripe(short index, double dMin, double dMax, unsigned long rgb);
	long Language(LPCTSTR sResource);
	long ExportFile(LPCTSTR lpszNewValue);
	long ImportFile(LPCTSTR lpszNewValue);
	long WriteTemplate(LPCTSTR lpszNewValue);
	long ReadTemplate(LPCTSTR lpszNewValue);
	long CopyData();
	long CopyBitmap();
	void Refresh();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Developer Studio will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CHARTFX_H__BA0EE532_E514_11D1_A2B6_0000B4810C13__INCLUDED_)
